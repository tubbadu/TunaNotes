var hash = {
	'["Cucumber", "feature"]': 'Cucumber Gherkin feature',
	'["abap", "abap"]': 'ABAP',
	'["ada", "adb", "ads", "ada"]': 'Ada',
//	'["ahk", "ahk", "ahkl"]': 'REPLACEHERE',
	'["apacheconf", "htaccess", "apache.conf", "apache2.conf"]': 'Apache Configuration',
//	'["applescript", "applescript"]': 'REPLACEHERE',
//	'["as", "as"]': 'REPLACEHERE',
//	'["as3", "as"]': 'REPLACEHERE',
//	'["asy", "asy"]': 'REPLACEHERE',
	'["bash", "sh", "ksh", "bash", "ebuild", "eclass"]': 'Bash',
	'["bat", "bat", "cmd"]': 'MS-DOS Batch',
//	'["befunge", "befunge"]': 'REPLACEHERE',
//	'["blitzmax", "bmx"]': 'REPLACEHERE',
	'["boo", "boo"]': 'Boo',
	'["brainfuck", "bf", "b"]': 'REPLACEHERE',
	'["c", "c", "h"]': 'C',
//	'["cfm", "cfm", "cfml", "cfc"]': 'REPLACEHERE',
//	'["cheetah", "tmpl", "spt"]': 'REPLACEHERE',
//	'["cl", "cl", "lisp", "el"]': 'REPLACEHERE',
	'["clojure", "clj", "cljs"]': 'Clojure',
	'["cmake", "cmake", "CMakeLists.txt"]': 'CMake',
	'["coffeescript", "coffee"]': 'CoffeeScript',
//	'["console", "sh-session"]': 'REPLACEHERE',
//	'["control", "control"]': 'REPLACEHERE',
	'["cpp", "cpp", "hpp", "c++", "h++", "cc", "hh", "cxx", "hxx", "pde"]': 'C++',
	'["csharp", "cs", "c#"]': 'C#',
	'["css", "css"]': 'CSS',
//	'["cython", "pyx", "pxd", "pxi"]': 'REPLACEHERE',
	'["d", "d", "di"]': 'D',
//	'["delphi", "pas"]': 'REPLACEHERE',
	'["diff", "diff", "patch"]': 'Diff',
//	'["dpatch", "dpatch", "darcspatch"]': 'REPLACEHERE',
//	'["duel", "duel", "jbst"]': 'REPLACEHERE',
//	'["dylan", "dylan", "dyl"]': 'REPLACEHERE',
//	'["erb", "erb"]': 'REPLACEHERE',
//	'["erl", "erl-sh"]': 'REPLACEHERE',
	'["erlang", "erl", "hrl"]': 'Erlang',
//	'["evoque", "evoque"]': 'REPLACEHERE',
//	'["factor", "factor"]': 'REPLACEHERE',
//	'["felix", "flx", "flxh"]': 'REPLACEHERE',
	'["fortran", "f", "f90"]': 'Fortran (Free Format)',
//	'["gas", "s", "S"]': 'REPLACEHERE',
//	'["genshi", "kid"]': 'REPLACEHERE',
	'["glsl", "vert", "frag", "geo"]': 'GLSL',
	'["gnuplot", "plot", "plt"]': 'Gnuplot',
	'["go", "go"]': 'Go',
//	'["groff", "1234567)", "man"]': 'REPLACEHERE',
	'["haml", "haml"]': 'Haml',
	'["haskell", "hs"]': 'Haskell',
	'["html", "html", "htm", "xhtml", "xslt"]': 'HTML',
//	'["hx", "hx"]': 'REPLACEHERE',
//	'["hybris", "hy", "hyb"]': 'REPLACEHERE',
	'["ini", "ini", "cfg"]': 'INI Files',
//	'["io", "io"]': 'REPLACEHERE',
//	'["ioke", "ik"]': 'REPLACEHERE',
//	'["irc", "weechatlog"]': 'REPLACEHERE',
//	'["jade", "jade"]': 'REPLACEHERE',
	'["java", "java"]': 'Java',
	'["javascript", "js"]': 'JavaScript',
	'["jsp", "jsp"]': 'JSP',
//	'["lhs", "lhs"]': 'REPLACEHERE',
	'["llvm", "ll"]': 'LLVM',
	'["logtalk", "lgt"]': 'Logtalk',
	'["lua", "lua", "wlua"]': 'Lua',
	'["make", "mak", "Makefile", "makefile", "Makefile.", "GNUmakefile"]': 'Makefile',
	'["mako", "mao"]': 'Mako',
//	'["maql", "maql"]': 'REPLACEHERE',
	'["mason", "mhtml", "mc", "mi", "autohandler", "dhandler"]': 'Mason',
	'["markdown", "md"]': 'Markdown',
	'["modelica", "mo"]': 'Modelica',
	'["modula2", "def", "mod"]': 'Modula-2',
//	'["moocode", "moo"]': 'REPLACEHERE',
//	'["mupad", "mu"]': 'REPLACEHERE',
//	'["mxml", "mxml"]': 'REPLACEHERE',
//	'["myghty", "myt", "autodelegate"]': 'REPLACEHERE',
//	'["nasm", "asm", "ASM"]': 'REPLACEHERE',
//	'["newspeak", "ns2"]': 'REPLACEHERE',
//	'["objdump", "objdump"]': 'REPLACEHERE',
	'["objectivec", "m"]': 'Objective-C',
//	'["objectivej", "j"]': 'REPLACEHERE',
	'["ocaml", "ml", "mli", "mll", "mly"]': 'Objective Caml Ocamllex',
//	'["ooc", "ooc"]': 'REPLACEHERE',
	'["perl", "pl", "pm"]': 'Perl',
	'["php", "php", "php345)"]': 'PHP/PHP',
	'["postscript", "ps", "eps"]': 'PostScript',
//	'["pot", "pot", "po"]': 'REPLACEHERE',
//	'["pov", "pov", "inc"]': 'REPLACEHERE',
	'["prolog", "prolog", "pro", "pl"]': 'Prolog',
//	'["properties", "properties"]': 'REPLACEHERE',
	'["protobuf", "proto"]': 'Protobuf',
//	'["py3tb", "py3tb"]': 'REPLACEHERE',
//	'["pytb", "pytb"]': 'REPLACEHERE',
	'["python", "py", "pyw", "sc", "SConstruct", "SConscript", "tac"]': 'Python',
	'["r", "R"]': 'R Script',
	'["rb", "rb", "rbw", "Rakefile", "rake", "gemspec", "rbx", "duby"]': 'Raku',
//	'["rconsole", "Rout"]': 'REPLACEHERE',
//	'["rebol", "r", "r3"]': 'REPLACEHERE',
//	'["redcode", "cw"]': 'REPLACEHERE',
	'["rhtml", "rhtml"]': 'Ruby/Rails/RHTML',
//	'["rst", "rst", "rest"]': 'REPLACEHERE',
	'["sass", "sass"]': 'SASS',
	'["scala", "scala"]': 'Scala',
//	'["scaml", "scaml"]': 'REPLACEHERE',
	'["scheme", "scm"]': 'Scheme',
	'["scss", "scss"]': 'SCSS',
//	'["smalltalk", "st"]': 'REPLACEHERE',
//	'["smarty", "tpl"]': 'REPLACEHERE',
//	'["sourceslist", "sources.list"]': 'REPLACEHERE',
//	'["splus", "S", "R"]': 'REPLACEHERE',
	'["sql", "sql"]': 'SQL',
//	'["sqlite3", "sqlite3-console"]': 'REPLACEHERE',
//	'["squidconf", "squid.conf"]': 'REPLACEHERE',
//	'["ssp", "ssp"]': 'REPLACEHERE',
	'["tcl", "tcl"]': 'Tcl/Tk',
	'["tcsh", "tcsh", "csh"]': 'Tcsh',
//	'["tex", "tex", "aux", "toc"]': 'REPLACEHERE',
	'["text", "txt"]': 'None',
//	'["v", "v", "sv"]': 'REPLACEHERE',
	'["vala", "vala", "vapi"]': 'Vala',
//	'["vbnet", "vb", "bas"]': 'REPLACEHERE',
	'["velocity", "vm", "fhtml"]': 'Velocity',
//	'["vim", "vim", "vimrc"]': 'REPLACEHERE',
	'["xml", "xml", "xsl", "rss", "xslt", "xsd", "wsdl"]': 'XML',
//	'["xquery", "xqy", "xquery"]': 'REPLACEHERE',
	'["xslt", "xsl", "xslt"]': 'xslt',
	'["yaml", "yaml", "yml"]': 'YAML',
//	 custom ones
	'["vhdl", "vhd"]': 'VHDL',
	'["json"]': 'JSON',
	'["desktop"]': '.desktop',
	'["fstab"]': 'fstab',
	'["gitignore"]': 'Git Ignore',
	'["spice", "ltspice"]': 'Spice',
	'["verilog"]': 'Verilog',
	'["asciidoc"]': 'AsciiDoc',
	'["ninja"]': 'Ninja',
	'["qmake"]': 'QMake',
	'["qml"]': 'QML',
	'["matlab"]': 'Matlab',
	'["octave"]': 'Octave',
	'["fish"]': 'Fish',
	'["zsh"]': 'Zsh',
	'["ruby"]': 'Ruby',
	'["rust"]': 'Rust',
	'["julia"]': 'Julia',
	'["kotlin"]': 'Kotlin',
	'["pascal"]': 'Pascal',
	'["tads", "tads3"]': 'TADS 3',
	'["latex", "tex"]': 'LaTeX'
}

function getLanguageName(str){
	let s = str.trim().toLowerCase()
	if(s.length < 1){
		return "None"
	}
	for (const [key, value] of Object.entries(hash)) {
		let l = JSON.parse(key)
		if (l.includes(s)){
			return value
		}
	}
	return "None"
}

